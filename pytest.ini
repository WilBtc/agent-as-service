[pytest]
# Pytest configuration for AaaS tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Output options
addopts =
    # Show detailed output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Enable strict markers (all markers must be registered)
    --strict-markers
    # Show warnings
    -W default
    # Coverage options (if pytest-cov is installed)
    --cov=src/aaas
    --cov-report=html
    --cov-report=term-missing
    # Asyncio mode
    --asyncio-mode=auto

# Markers for categorizing tests
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test multiple components together
    api: Tests for API endpoints
    auth: Tests for authentication and authorization
    rate_limit: Tests for rate limiting
    slow: Tests that take a long time to run
    requires_api_key: Tests that require valid API keys

# Asyncio configuration
asyncio_mode = auto

# Minimum Python version
minversion = 3.10

# Test timeout (seconds)
timeout = 300

# Log level
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Ignore certain directories
norecursedirs = .git .tox dist build *.egg __pycache__ .venv venv

# Coverage configuration
[coverage:run]
source = src/aaas
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
precision = 2
